{"version":3,"sources":["circus-api.js"],"names":["CircusApi","key","console","log","axios","get","API_URL","then","handleSuccessfulReponse","catch","handleError","value","post","type","response","data","evt","CustomEvent","detail","document","querySelector","dispatchEvent","error","info"],"mappings":";;;;;;;;;;IAAMA,S;;;;qCACQ,iC;;;;;4BACFC,G,EAAK;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAA0BF,GAAtC;AAEAG,MAAAA,KAAK,CACFC,GADH,WACU,KAAKC,OADf,cAC0BL,GAD1B,GAEGM,IAFH,CAEQ,KAAKC,uBAFb,EAGGC,KAHH,CAGS,KAAKC,WAHd;AAID;;;6BACQT,G,EAAKU,K,EAAO;AACnBT,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBF,GAAvB,GAA6B,KAA7B,GAAqCU,KAAjD;AAEAP,MAAAA,KAAK,CACFQ,IADH,WACW,KAAKN,OADhB,cAC2BL,GAD3B,GACkC;AAC9BY,QAAAA,IAAI,EAAE,QADwB;AAE9BF,QAAAA,KAAK,EAAEA;AAFuB,OADlC,EAKGJ,IALH,CAKQ,KAAKC,uBALb,EAMGC,KANH,CAMS,KAAKC,WANd;AAOD;;;4CAEuBI,Q,EAAU;AAChCZ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BW,QAA/B;AAEA,UAAMH,KAAK,GAAGG,QAAQ,CAACC,IAAvB;AAEA,UAAMC,GAAG,GAAG,IAAIC,WAAJ,CAAgB,UAAhB,EAA4B;AAAEC,QAAAA,MAAM,EAAEP;AAAV,OAA5B,CAAZ;AACAQ,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,aAA/B,CAA6CL,GAA7C;AACD;;;gCACWM,K,EAAO;AACjBpB,MAAAA,OAAO,CAACqB,IAAR,CAAa,eAAb,EAA8BD,KAA9B;AACA,UAAMN,GAAG,GAAG,IAAIC,WAAJ,CAAgB,WAAhB,EAA6B;AAAEC,QAAAA,MAAM,EAAEI;AAAV,OAA7B,CAAZ;AACAH,MAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BC,aAA/B,CAA6CL,GAA7C;AACD","sourcesContent":["class CircusApi {\n    API_URL = \"http://circuslabs.net:3000/data\";\n    getData(key) {\n      console.log(\"getting data for key \" + key);\n  \n      axios\n        .get(`${this.API_URL}/${key}`)\n        .then(this.handleSuccessfulReponse)\n        .catch(this.handleError);\n    }\n    saveData(key, value) {\n      console.log(\"saving some data: \" + key + \" = \" + value);\n  \n      axios\n        .post(`${this.API_URL}/${key}`, {\n          type: \"string\",\n          value: value,\n        })\n        .then(this.handleSuccessfulReponse)\n        .catch(this.handleError);\n    }\n  \n    handleSuccessfulReponse(response) {\n      console.log(\"got a response!\", response);\n  \n      const value = response.data;\n  \n      const evt = new CustomEvent(\"got-data\", { detail: value });\n      document.querySelector(\"body\").dispatchEvent(evt);\n    }\n    handleError(error) {\n      console.info(\"got an error!\", error);\n      const evt = new CustomEvent(\"got-error\", { detail: error });\n      document.querySelector(\"body\").dispatchEvent(evt);\n    }\n  }\n  "],"file":"circus-api.js"}